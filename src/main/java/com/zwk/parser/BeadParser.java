/* BeadParser.java */
/* Generated By:JavaCC: Do not edit this line. BeadParser.java */
package com.zwk.parser;

import com.zwk.node.*;

public class BeadParser implements BeadParserConstants {

  final public Node root() throws ParseException {RootNode rootNode = new RootNode();
    Node v ;
    label_1:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case VAR:
      case IDENTIFIER:{
        ;
        break;
        }
      default:
        jj_la1[0] = jj_gen;
        break label_1;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case VAR:{
        v = var();
rootNode.inits.add(v);
        break;
        }
      default:
        jj_la1[1] = jj_gen;
        if (jj_2_1(2)) {
          v = assign();
rootNode.inits.add(v);
        } else {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case IDENTIFIER:{
            v = funcCall();
rootNode.inits.add(v);
            break;
            }
          default:
            jj_la1[2] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
      }
    }
{if ("" != null) return rootNode;}
    throw new Error("Missing return statement in function");
}

  final public Node imports() throws ParseException {
    jj_consume_token(IMPORT);
    jj_consume_token(IDENTIFIER);
    label_2:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case DOT:{
        ;
        break;
        }
      default:
        jj_la1[3] = jj_gen;
        break label_2;
      }
      jj_consume_token(DOT);
      jj_consume_token(IDENTIFIER);
    }
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case AS:{
      jj_consume_token(AS);
      jj_consume_token(IDENTIFIER);
      break;
      }
    default:
      jj_la1[4] = jj_gen;
      ;
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node var() throws ParseException {VarNode varNode = new VarNode();
    Token t;
    Node v;
    jj_consume_token(VAR);
    t = jj_consume_token(IDENTIFIER);
varNode.name = t.image;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case ASSIGN:{
      jj_consume_token(ASSIGN);
      v = value();
varNode.value = v;
      break;
      }
    default:
      jj_la1[5] = jj_gen;
      ;
    }
{if ("" != null) return varNode;}
    throw new Error("Missing return statement in function");
}

  final public Node assign() throws ParseException {AssignNode assignNode = new AssignNode();
    Token t ;
    Token operator;
    Node v;
    t = jj_consume_token(IDENTIFIER);
assignNode.name = t.image;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case ASSIGN:{
      operator = jj_consume_token(ASSIGN);
      break;
      }
    case PLUSASSIGN:{
      operator = jj_consume_token(PLUSASSIGN);
      break;
      }
    case MINUSASSIGN:{
      operator = jj_consume_token(MINUSASSIGN);
      break;
      }
    case STARASSIGN:{
      operator = jj_consume_token(STARASSIGN);
      break;
      }
    case SLASHASSIGN:{
      operator = jj_consume_token(SLASHASSIGN);
      break;
      }
    case ANDASSIGN:{
      operator = jj_consume_token(ANDASSIGN);
      break;
      }
    case ORASSIGN:{
      operator = jj_consume_token(ORASSIGN);
      break;
      }
    case XORASSIGN:{
      operator = jj_consume_token(XORASSIGN);
      break;
      }
    case REMASSIGN:{
      operator = jj_consume_token(REMASSIGN);
      break;
      }
    case LSHIFTASSIGN:{
      operator = jj_consume_token(LSHIFTASSIGN);
      break;
      }
    case RSHIFTASSIGN:{
      operator = jj_consume_token(RSHIFTASSIGN);
      break;
      }
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
assignNode.operator = operator.image;
    v = value();
assignNode.value =v;
{if ("" != null) return assignNode;}
    throw new Error("Missing return statement in function");
}

  final public Node attributeAssign() throws ParseException {
    attribute();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case ASSIGN:{
      jj_consume_token(ASSIGN);
      break;
      }
    case PLUSASSIGN:{
      jj_consume_token(PLUSASSIGN);
      break;
      }
    case MINUSASSIGN:{
      jj_consume_token(MINUSASSIGN);
      break;
      }
    case STARASSIGN:{
      jj_consume_token(STARASSIGN);
      break;
      }
    case SLASHASSIGN:{
      jj_consume_token(SLASHASSIGN);
      break;
      }
    case ANDASSIGN:{
      jj_consume_token(ANDASSIGN);
      break;
      }
    case ORASSIGN:{
      jj_consume_token(ORASSIGN);
      break;
      }
    case XORASSIGN:{
      jj_consume_token(XORASSIGN);
      break;
      }
    case REMASSIGN:{
      jj_consume_token(REMASSIGN);
      break;
      }
    case LSHIFTASSIGN:{
      jj_consume_token(LSHIFTASSIGN);
      break;
      }
    case RSHIFTASSIGN:{
      jj_consume_token(RSHIFTASSIGN);
      break;
      }
    default:
      jj_la1[7] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    value();
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node func() throws ParseException {
    jj_consume_token(FUNC);
    jj_consume_token(IDENTIFIER);
    jj_consume_token(LPAREN);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFIER:{
      jj_consume_token(IDENTIFIER);
      label_3:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case COMMA:{
          ;
          break;
          }
        default:
          jj_la1[8] = jj_gen;
          break label_3;
        }
        jj_consume_token(COMMA);
        jj_consume_token(IDENTIFIER);
      }
      break;
      }
    default:
      jj_la1[9] = jj_gen;
      ;
    }
    jj_consume_token(RPAREN);
    jj_consume_token(LBRACE);
    label_4:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case BREAK:
      case CONTINUE:
      case FOR:
      case IF:
      case RETURN:
      case VAR:
      case FUNC:
      case DEFER:
      case IDENTIFIER:
      case LBRACE:{
        ;
        break;
        }
      default:
        jj_la1[10] = jj_gen;
        break label_4;
      }
      statement();
    }
    jj_consume_token(RBRACE);
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node value() throws ParseException {Node ret;
    Token t;
    if (jj_2_2(2)) {
      t = jj_consume_token(IDENTIFIER);
IdNode idNode = new IdNode();idNode.id = t.image;ret = idNode;
    } else if (jj_2_3(2)) {
      ret = literalValue();
    } else if (jj_2_4(2)) {
      ret = logicValue();
    } else if (jj_2_5(2)) {
      ret = arithmeticValue();
    } else if (jj_2_6(2)) {
      ret = ifValue();
    } else if (jj_2_7(2)) {
      ret = anonymousFunc();
    } else if (jj_2_8(2)) {
      ret = funcCall();
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case FUNC:{
        ret = anonymousFuncCall();
        break;
        }
      default:
        jj_la1[11] = jj_gen;
        if (jj_2_9(2)) {
          ret = lambda();
        } else {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case LBRACKET:{
            ret = array();
            break;
            }
          case LBRACE:{
            ret = map();
            break;
            }
          default:
            jj_la1[12] = jj_gen;
            if (jj_2_10(2)) {
              ret = attribute();
            } else {
              jj_consume_token(-1);
              throw new ParseException();
            }
          }
        }
      }
    }
{if ("" != null) return ret;}
    throw new Error("Missing return statement in function");
}

  final public Node array() throws ParseException {
    jj_consume_token(LBRACKET);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FALSE:
    case TRUE:
    case FUNC:
    case INTEGER_LITERAL:
    case FLOATING_POINT_LITERAL:
    case STRING_LITERAL:
    case IDENTIFIER:
    case LPAREN:
    case LBRACE:
    case LBRACKET:{
      value();
      label_5:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case COMMA:{
          ;
          break;
          }
        default:
          jj_la1[13] = jj_gen;
          break label_5;
        }
        jj_consume_token(COMMA);
        value();
      }
      break;
      }
    default:
      jj_la1[14] = jj_gen;
      ;
    }
    jj_consume_token(RBRACKET);
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node map() throws ParseException {
    jj_consume_token(LBRACE);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFIER:{
      jj_consume_token(IDENTIFIER);
      jj_consume_token(COLON);
      value();
      label_6:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case COMMA:{
          ;
          break;
          }
        default:
          jj_la1[15] = jj_gen;
          break label_6;
        }
        jj_consume_token(COMMA);
        jj_consume_token(IDENTIFIER);
        jj_consume_token(COLON);
        value();
      }
      break;
      }
    default:
      jj_la1[16] = jj_gen;
      ;
    }
    jj_consume_token(RBRACE);
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node attribute() throws ParseException {
    jj_consume_token(IDENTIFIER);
    label_7:
    while (true) {
      attributeValue();
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case LBRACKET:
      case DOT:{
        ;
        break;
        }
      default:
        jj_la1[17] = jj_gen;
        break label_7;
      }
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node attributeValue() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case DOT:{
      jj_consume_token(DOT);
      jj_consume_token(IDENTIFIER);
      break;
      }
    case LBRACKET:{
      jj_consume_token(LBRACKET);
      if (jj_2_11(2)) {
        jj_consume_token(IDENTIFIER);
      } else {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case STRING_LITERAL:{
          jj_consume_token(STRING_LITERAL);
          break;
          }
        case INTEGER_LITERAL:{
          jj_consume_token(INTEGER_LITERAL);
          break;
          }
        case IDENTIFIER:{
          attribute();
          break;
          }
        default:
          jj_la1[18] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
      jj_consume_token(RBRACKET);
{if ("" != null) return null;}
      break;
      }
    default:
      jj_la1[19] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final public Node literalValue() throws ParseException {Node ret;
    Token t;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case TRUE:{
      t = jj_consume_token(TRUE);
BooleanLiteralValueNode valueNode = new BooleanLiteralValueNode();valueNode.value = true;ret = valueNode; {if ("" != null) return ret;}
      break;
      }
    case FALSE:{
      t = jj_consume_token(FALSE);
BooleanLiteralValueNode valueNode = new BooleanLiteralValueNode();valueNode.value = false;ret = valueNode; {if ("" != null) return ret;}
      break;
      }
    case FLOATING_POINT_LITERAL:{
      t = jj_consume_token(FLOATING_POINT_LITERAL);
FloatLiteralValueNode valueNode = new FloatLiteralValueNode();valueNode.value= Double.parseDouble(t.image);ret = valueNode; {if ("" != null) return ret;}
      break;
      }
    case INTEGER_LITERAL:{
      t = jj_consume_token(INTEGER_LITERAL);
IntegerLiteralValueNode valueNode = new IntegerLiteralValueNode();valueNode.value = valueNode.parseInt(t.image);ret = valueNode; {if ("" != null) return ret;}
      break;
      }
    case STRING_LITERAL:{
      t = jj_consume_token(STRING_LITERAL);
StringLiteralValueNode valueNode = new StringLiteralValueNode();valueNode.value = valueNode.parseString(t.image);ret = valueNode; {if ("" != null) return ret;}
      break;
      }
    default:
      jj_la1[20] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final public Node logicValue() throws ParseException {
    priorityLogicValue();
    label_8:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case OR:
      case SC_OR:{
        ;
        break;
        }
      default:
        jj_la1[21] = jj_gen;
        break label_8;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case SC_OR:{
        jj_consume_token(SC_OR);
        break;
        }
      case OR:{
        jj_consume_token(OR);
        break;
        }
      default:
        jj_la1[22] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      priorityLogicValue();
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node priorityLogicValue() throws ParseException {
    priorityBaseLogicValue();
    label_9:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case AND:
      case SC_AND:{
        ;
        break;
        }
      default:
        jj_la1[23] = jj_gen;
        break label_9;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case SC_AND:{
        jj_consume_token(SC_AND);
        break;
        }
      case AND:{
        jj_consume_token(AND);
        break;
        }
      default:
        jj_la1[24] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      priorityBaseLogicValue();
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node priorityBaseLogicValue() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FALSE:
    case TRUE:
    case FUNC:
    case INTEGER_LITERAL:
    case FLOATING_POINT_LITERAL:
    case STRING_LITERAL:
    case IDENTIFIER:
    case LPAREN:{
      comparisonValue();
      break;
      }
    case LBRACE:{
      jj_consume_token(LBRACE);
      logicValue();
      jj_consume_token(RBRACE);
{if ("" != null) return null;}
      break;
      }
    default:
      jj_la1[25] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final public Node comparisonValue() throws ParseException {
    comparisonExpression();
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case GE:{
      jj_consume_token(GE);
      break;
      }
    case GT:{
      jj_consume_token(GT);
      break;
      }
    case LE:{
      jj_consume_token(LE);
      break;
      }
    case LT:{
      jj_consume_token(LT);
      break;
      }
    case EQ:{
      jj_consume_token(EQ);
      break;
      }
    case NE:{
      jj_consume_token(NE);
      break;
      }
    default:
      jj_la1[26] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    comparisonExpression();
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node comparisonExpression() throws ParseException {
    if (jj_2_12(2)) {
      jj_consume_token(IDENTIFIER);
    } else if (jj_2_13(2)) {
      literalValue();
    } else if (jj_2_14(2)) {
      arithmeticValue();
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IDENTIFIER:{
        funcCall();
        break;
        }
      case FUNC:{
        anonymousFuncCall();
{if ("" != null) return null;}
        break;
        }
      default:
        jj_la1[27] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final public Node calcExpression() throws ParseException {
    if (jj_2_15(2)) {
      jj_consume_token(IDENTIFIER);
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case FALSE:
      case TRUE:
      case INTEGER_LITERAL:
      case FLOATING_POINT_LITERAL:
      case STRING_LITERAL:{
        literalValue();
        break;
        }
      case IDENTIFIER:{
        funcCall();
        break;
        }
      case FUNC:{
        anonymousFuncCall();
{if ("" != null) return null;}
        break;
        }
      default:
        jj_la1[28] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final public Node arithmeticValue() throws ParseException {
    priorityArithmeticValue();
    label_10:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case PLUS:
      case MINUS:{
        ;
        break;
        }
      default:
        jj_la1[29] = jj_gen;
        break label_10;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case PLUS:{
        jj_consume_token(PLUS);
        break;
        }
      case MINUS:{
        jj_consume_token(MINUS);
        break;
        }
      default:
        jj_la1[30] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      priorityArithmeticValue();
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node priorityArithmeticValue() throws ParseException {
    priorityBaseArithmeticValue();
    label_11:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case STAR:
      case SLASH:
      case BIT_AND:
      case BIT_OR:
      case XOR:
      case REM:
      case LSHIFT:
      case RSHIFT:{
        ;
        break;
        }
      default:
        jj_la1[31] = jj_gen;
        break label_11;
      }
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case STAR:{
        jj_consume_token(STAR);
        break;
        }
      case SLASH:{
        jj_consume_token(SLASH);
        break;
        }
      case REM:{
        jj_consume_token(REM);
        break;
        }
      case BIT_AND:{
        jj_consume_token(BIT_AND);
        break;
        }
      case BIT_OR:{
        jj_consume_token(BIT_OR);
        break;
        }
      case XOR:{
        jj_consume_token(XOR);
        break;
        }
      case LSHIFT:{
        jj_consume_token(LSHIFT);
        break;
        }
      case RSHIFT:{
        jj_consume_token(RSHIFT);
        break;
        }
      default:
        jj_la1[32] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      priorityBaseArithmeticValue();
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node priorityBaseArithmeticValue() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FALSE:
    case TRUE:
    case FUNC:
    case INTEGER_LITERAL:
    case FLOATING_POINT_LITERAL:
    case STRING_LITERAL:
    case IDENTIFIER:{
      calcExpression();
      break;
      }
    case LPAREN:{
      jj_consume_token(LPAREN);
      arithmeticValue();
      jj_consume_token(RPAREN);
{if ("" != null) return null;}
      break;
      }
    default:
      jj_la1[33] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

  final public Node ifValue() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFIER:{
      jj_consume_token(IDENTIFIER);
      break;
      }
    case FALSE:
    case TRUE:
    case INTEGER_LITERAL:
    case FLOATING_POINT_LITERAL:
    case STRING_LITERAL:{
      literalValue();
      break;
      }
    default:
      jj_la1[34] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(IF);
    logicValue();
    jj_consume_token(ELSE);
    arithmeticValue();
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node funcCall() throws ParseException {FuncCallNode funcCallNode = new FuncCallNode();
    Node v;
    Token t;
    if (jj_2_16(2)) {
      t = jj_consume_token(IDENTIFIER);
IdNode idNode = new IdNode();idNode.id = t.image;funcCallNode.func = idNode;
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IDENTIFIER:{
        attribute();
        break;
        }
      default:
        jj_la1[35] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    jj_consume_token(LPAREN);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FALSE:
    case TRUE:
    case FUNC:
    case INTEGER_LITERAL:
    case FLOATING_POINT_LITERAL:
    case STRING_LITERAL:
    case IDENTIFIER:
    case LPAREN:
    case LBRACE:
    case LBRACKET:{
      v = value();
funcCallNode.params.add(v);
      label_12:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case COMMA:{
          ;
          break;
          }
        default:
          jj_la1[36] = jj_gen;
          break label_12;
        }
        jj_consume_token(COMMA);
        v = value();
funcCallNode.params.add(v);
      }
      break;
      }
    default:
      jj_la1[37] = jj_gen;
      ;
    }
    jj_consume_token(RPAREN);
{if ("" != null) return funcCallNode;}
    throw new Error("Missing return statement in function");
}

  final public Node anonymousFunc() throws ParseException {
    jj_consume_token(FUNC);
    jj_consume_token(LPAREN);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFIER:{
      jj_consume_token(IDENTIFIER);
      label_13:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case COMMA:{
          ;
          break;
          }
        default:
          jj_la1[38] = jj_gen;
          break label_13;
        }
        jj_consume_token(COMMA);
        jj_consume_token(IDENTIFIER);
      }
      break;
      }
    default:
      jj_la1[39] = jj_gen;
      ;
    }
    jj_consume_token(RPAREN);
    jj_consume_token(LBRACE);
    label_14:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case BREAK:
      case CONTINUE:
      case FOR:
      case IF:
      case RETURN:
      case VAR:
      case FUNC:
      case DEFER:
      case IDENTIFIER:
      case LBRACE:{
        ;
        break;
        }
      default:
        jj_la1[40] = jj_gen;
        break label_14;
      }
      statement();
    }
    jj_consume_token(RBRACE);
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node anonymousFuncCall() throws ParseException {
    anonymousFunc();
    jj_consume_token(LPAREN);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case FALSE:
    case TRUE:
    case FUNC:
    case INTEGER_LITERAL:
    case FLOATING_POINT_LITERAL:
    case STRING_LITERAL:
    case IDENTIFIER:
    case LPAREN:
    case LBRACE:
    case LBRACKET:{
      value();
      label_15:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case COMMA:{
          ;
          break;
          }
        default:
          jj_la1[41] = jj_gen;
          break label_15;
        }
        jj_consume_token(COMMA);
        value();
      }
      break;
      }
    default:
      jj_la1[42] = jj_gen;
      ;
    }
    jj_consume_token(RPAREN);
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node lambda() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFIER:{
      jj_consume_token(IDENTIFIER);
      label_16:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case COMMA:{
          ;
          break;
          }
        default:
          jj_la1[43] = jj_gen;
          break label_16;
        }
        jj_consume_token(COMMA);
        jj_consume_token(IDENTIFIER);
      }
      break;
      }
    case LPAREN:{
      jj_consume_token(LPAREN);
      jj_consume_token(RPAREN);
      break;
      }
    default:
      jj_la1[44] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    jj_consume_token(ARROW);
    lambdaBody();
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node lambdaBody() throws ParseException {
    if (jj_2_17(2)) {
      value();
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case LBRACE:{
        blockStatement();
{if ("" != null) return null;}
        break;
        }
      default:
        jj_la1[45] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
}

  final public Node statement() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case VAR:{
      var();
      break;
      }
    default:
      jj_la1[46] = jj_gen;
      if (jj_2_18(2)) {
        assign();
      } else if (jj_2_19(2)) {
        funcCall();
      } else {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case FUNC:{
          anonymousFuncCall();
          break;
          }
        case IF:{
          ifStatement();
          break;
          }
        case FOR:{
          forStatement();
          break;
          }
        case RETURN:{
          returnStatement();
          break;
          }
        case LBRACE:{
          blockStatement();
          break;
          }
        case DEFER:{
          deferCall();
          break;
          }
        case BREAK:{
          jj_consume_token(BREAK);
          break;
          }
        case CONTINUE:{
          jj_consume_token(CONTINUE);
{if ("" != null) return null;}
          break;
          }
        default:
          jj_la1[47] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    }
    throw new Error("Missing return statement in function");
}

  final public Node blockStatement() throws ParseException {
    jj_consume_token(LBRACE);
    label_17:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case BREAK:
      case CONTINUE:
      case FOR:
      case IF:
      case RETURN:
      case VAR:
      case FUNC:
      case DEFER:
      case IDENTIFIER:
      case LBRACE:{
        ;
        break;
        }
      default:
        jj_la1[48] = jj_gen;
        break label_17;
      }
      statement();
    }
    jj_consume_token(RBRACE);
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node deferCall() throws ParseException {
    jj_consume_token(DEFER);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFIER:{
      funcCall();
      break;
      }
    case FUNC:{
      anonymousFuncCall();
      break;
      }
    default:
      jj_la1[49] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node ifStatement() throws ParseException {
    jj_consume_token(IF);
    jj_consume_token(LPAREN);
    value();
    jj_consume_token(RPAREN);
    jj_consume_token(LBRACE);
    label_18:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case BREAK:
      case CONTINUE:
      case FOR:
      case IF:
      case RETURN:
      case VAR:
      case FUNC:
      case DEFER:
      case IDENTIFIER:
      case LBRACE:{
        ;
        break;
        }
      default:
        jj_la1[50] = jj_gen;
        break label_18;
      }
      statement();
    }
    jj_consume_token(RBRACE);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case ELSE:{
      jj_consume_token(ELSE);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IF:{
        ifStatement();
        break;
        }
      case LBRACE:{
        jj_consume_token(LBRACE);
        label_19:
        while (true) {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case BREAK:
          case CONTINUE:
          case FOR:
          case IF:
          case RETURN:
          case VAR:
          case FUNC:
          case DEFER:
          case IDENTIFIER:
          case LBRACE:{
            ;
            break;
            }
          default:
            jj_la1[51] = jj_gen;
            break label_19;
          }
          statement();
        }
        jj_consume_token(RBRACE);
        break;
        }
      default:
        jj_la1[52] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      break;
      }
    default:
      jj_la1[53] = jj_gen;
      ;
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node forStatement() throws ParseException {
    jj_consume_token(FOR);
    jj_consume_token(LPAREN);
    jj_consume_token(IDENTIFIER);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case COMMA:{
      jj_consume_token(COMMA);
      jj_consume_token(IDENTIFIER);
      break;
      }
    default:
      jj_la1[54] = jj_gen;
      ;
    }
    jj_consume_token(IN);
    collectionValue();
    jj_consume_token(RPAREN);
    jj_consume_token(LBRACE);
    label_20:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case BREAK:
      case CONTINUE:
      case FOR:
      case IF:
      case RETURN:
      case VAR:
      case FUNC:
      case DEFER:
      case IDENTIFIER:
      case LBRACE:{
        ;
        break;
        }
      default:
        jj_la1[55] = jj_gen;
        break label_20;
      }
      statement();
    }
    jj_consume_token(RBRACE);
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  final public Node collectionValue() throws ParseException {
    if (jj_2_20(2)) {
      jj_consume_token(IDENTIFIER);
    } else if (jj_2_21(2)) {
      funcCall();
    } else {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case FUNC:{
        anonymousFuncCall();
        break;
        }
      default:
        jj_la1[56] = jj_gen;
        if (jj_2_22(2)) {
          ifValue();
        } else {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case INTEGER_LITERAL:{
            jj_consume_token(INTEGER_LITERAL);
{if ("" != null) return null;}
            break;
            }
          default:
            jj_la1[57] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
      }
    }
    throw new Error("Missing return statement in function");
}

  final public Node returnStatement() throws ParseException {
    jj_consume_token(RETURN);
    if (jj_2_23(2)) {
      value();
    } else {
      ;
    }
{if ("" != null) return null;}
    throw new Error("Missing return statement in function");
}

  private boolean jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_1()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_2()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_3()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_4()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_5()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_6()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_7()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_8()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_9()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_10()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_11()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_12()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_13()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_14()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_15()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_16()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_17()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_18()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_19()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_20()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_21()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_2_22(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_22()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private boolean jj_2_23(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return (!jj_3_23()); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private boolean jj_3R_anonymousFuncCall_376_5_52()
 {
    if (jj_3R_anonymousFunc_372_5_26()) return true;
    return false;
  }

  private boolean jj_3R_ifValue_358_21_39()
 {
    if (jj_3R_literalValue_302_5_22()) return true;
    return false;
  }

  private boolean jj_3R_arithmeticValue_346_32_38()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(57)) {
    jj_scanpos = xsp;
    if (jj_scan_token(58)) return true;
    }
    return false;
  }

  private boolean jj_3R_priorityBaseArithmeticValue_354_24_58()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_3R_arithmeticValue_346_5_24()) return true;
    return false;
  }

  private boolean jj_3R_anonymousFunc_372_5_26()
 {
    if (jj_scan_token(FUNC)) return true;
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }

  private boolean jj_3_16()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_funcCall_367_5_27()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_16()) {
    jj_scanpos = xsp;
    if (jj_3R_funcCall_367_116_40()) return true;
    }
    if (jj_scan_token(LPAREN)) return true;
    return false;
  }

  private boolean jj_3R_ifValue_358_5_25()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(33)) {
    jj_scanpos = xsp;
    if (jj_3R_ifValue_358_21_39()) return true;
    }
    if (jj_scan_token(IF)) return true;
    return false;
  }

  private boolean jj_3R_priorityBaseArithmeticValue_354_5_48()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_priorityBaseArithmeticValue_354_5_57()) {
    jj_scanpos = xsp;
    if (jj_3R_priorityBaseArithmeticValue_354_24_58()) return true;
    }
    return false;
  }

  private boolean jj_3R_priorityBaseArithmeticValue_354_5_57()
 {
    if (jj_3R_calcExpression_338_7_64()) return true;
    return false;
  }

  private boolean jj_3R_priorityArithmeticValue_350_5_37()
 {
    if (jj_3R_priorityBaseArithmeticValue_354_5_48()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_priorityArithmeticValue_350_36_49()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_arithmeticValue_346_5_24()
 {
    if (jj_3R_priorityArithmeticValue_350_5_37()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_arithmeticValue_346_32_38()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_calcExpression_341_7_68()
 {
    if (jj_3R_anonymousFuncCall_376_5_52()) return true;
    return false;
  }

  private boolean jj_3R_calcExpression_340_7_67()
 {
    if (jj_3R_funcCall_367_5_27()) return true;
    return false;
  }

  private boolean jj_3R_calcExpression_339_7_66()
 {
    if (jj_3R_literalValue_302_5_22()) return true;
    return false;
  }

  private boolean jj_3_15()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_calcExpression_338_7_64()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_15()) {
    jj_scanpos = xsp;
    if (jj_3R_calcExpression_339_7_66()) {
    jj_scanpos = xsp;
    if (jj_3R_calcExpression_340_7_67()) {
    jj_scanpos = xsp;
    if (jj_3R_calcExpression_341_7_68()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_priorityBaseLogicValue_319_25_56()
 {
    if (jj_scan_token(LBRACE)) return true;
    if (jj_3R_logicValue_311_5_23()) return true;
    return false;
  }

  private boolean jj_3R_comparisonExpression_333_7_70()
 {
    if (jj_3R_anonymousFuncCall_376_5_52()) return true;
    return false;
  }

  private boolean jj_3R_comparisonExpression_332_7_69()
 {
    if (jj_3R_funcCall_367_5_27()) return true;
    return false;
  }

  private boolean jj_3_14()
 {
    if (jj_3R_arithmeticValue_346_5_24()) return true;
    return false;
  }

  private boolean jj_3_13()
 {
    if (jj_3R_literalValue_302_5_22()) return true;
    return false;
  }

  private boolean jj_3_12()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_comparisonExpression_329_7_65()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_12()) {
    jj_scanpos = xsp;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3R_comparisonExpression_332_7_69()) {
    jj_scanpos = xsp;
    if (jj_3R_comparisonExpression_333_7_70()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_comparisonValue_324_5_63()
 {
    if (jj_3R_comparisonExpression_329_7_65()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(53)) {
    jj_scanpos = xsp;
    if (jj_scan_token(46)) {
    jj_scanpos = xsp;
    if (jj_scan_token(52)) {
    jj_scanpos = xsp;
    if (jj_scan_token(47)) {
    jj_scanpos = xsp;
    if (jj_scan_token(51)) {
    jj_scanpos = xsp;
    if (jj_scan_token(54)) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_priorityBaseLogicValue_319_5_47()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_priorityBaseLogicValue_319_5_55()) {
    jj_scanpos = xsp;
    if (jj_3R_priorityBaseLogicValue_319_25_56()) return true;
    }
    return false;
  }

  private boolean jj_3R_priorityBaseLogicValue_319_5_55()
 {
    if (jj_3R_comparisonValue_324_5_63()) return true;
    return false;
  }

  private boolean jj_3R_priorityLogicValue_315_5_36()
 {
    if (jj_3R_priorityBaseLogicValue_319_5_47()) return true;
    return false;
  }

  private boolean jj_3R_logicValue_311_5_23()
 {
    if (jj_3R_priorityLogicValue_315_5_36()) return true;
    return false;
  }

  private boolean jj_3R_literalValue_306_7_35()
 {
    if (jj_scan_token(STRING_LITERAL)) return true;
    return false;
  }

  private boolean jj_3_11()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_literalValue_305_7_34()
 {
    if (jj_scan_token(INTEGER_LITERAL)) return true;
    return false;
  }

  private boolean jj_3R_literalValue_304_7_33()
 {
    if (jj_scan_token(FLOATING_POINT_LITERAL)) return true;
    return false;
  }

  private boolean jj_3R_literalValue_303_7_32()
 {
    if (jj_scan_token(FALSE)) return true;
    return false;
  }

  private boolean jj_3R_literalValue_302_5_31()
 {
    if (jj_scan_token(TRUE)) return true;
    return false;
  }

  private boolean jj_3R_literalValue_302_5_22()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_literalValue_302_5_31()) {
    jj_scanpos = xsp;
    if (jj_3R_literalValue_303_7_32()) {
    jj_scanpos = xsp;
    if (jj_3R_literalValue_304_7_33()) {
    jj_scanpos = xsp;
    if (jj_3R_literalValue_305_7_34()) {
    jj_scanpos = xsp;
    if (jj_3R_literalValue_306_7_35()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_attribute_287_19_43()
 {
    if (jj_3R_attributeValue_292_5_51()) return true;
    return false;
  }

  private boolean jj_3R_attributeValue_293_7_60()
 {
    if (jj_scan_token(LBRACKET)) return true;
    return false;
  }

  private boolean jj_3R_map_282_16_62()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_attributeValue_292_5_51()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_attributeValue_292_5_59()) {
    jj_scanpos = xsp;
    if (jj_3R_attributeValue_293_7_60()) return true;
    }
    return false;
  }

  private boolean jj_3R_attributeValue_292_5_59()
 {
    if (jj_scan_token(DOT)) return true;
    return false;
  }

  private boolean jj_3R_array_277_17_61()
 {
    if (jj_3R_value_258_4_30()) return true;
    return false;
  }

  private boolean jj_3R_attribute_287_5_29()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    if (jj_3R_attribute_287_19_43()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_attribute_287_19_43()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_funcCall_367_116_40()
 {
    if (jj_3R_attribute_287_5_29()) return true;
    return false;
  }

  private boolean jj_3R_map_282_5_54()
 {
    if (jj_scan_token(LBRACE)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_map_282_16_62()) jj_scanpos = xsp;
    if (jj_scan_token(RBRACE)) return true;
    return false;
  }

  private boolean jj_3R_array_277_5_53()
 {
    if (jj_scan_token(LBRACKET)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_array_277_17_61()) jj_scanpos = xsp;
    if (jj_scan_token(RBRACKET)) return true;
    return false;
  }

  private boolean jj_3_10()
 {
    if (jj_3R_attribute_287_5_29()) return true;
    return false;
  }

  private boolean jj_3R_value_268_6_46()
 {
    if (jj_3R_map_282_5_54()) return true;
    return false;
  }

  private boolean jj_3R_value_267_6_45()
 {
    if (jj_3R_array_277_5_53()) return true;
    return false;
  }

  private boolean jj_3_9()
 {
    if (jj_3R_lambda_381_5_28()) return true;
    return false;
  }

  private boolean jj_3R_value_265_6_44()
 {
    if (jj_3R_anonymousFuncCall_376_5_52()) return true;
    return false;
  }

  private boolean jj_3_8()
 {
    if (jj_3R_funcCall_367_5_27()) return true;
    return false;
  }

  private boolean jj_3_7()
 {
    if (jj_3R_anonymousFunc_372_5_26()) return true;
    return false;
  }

  private boolean jj_3_6()
 {
    if (jj_3R_ifValue_358_5_25()) return true;
    return false;
  }

  private boolean jj_3_5()
 {
    if (jj_3R_arithmeticValue_346_5_24()) return true;
    return false;
  }

  private boolean jj_3_4()
 {
    if (jj_3R_logicValue_311_5_23()) return true;
    return false;
  }

  private boolean jj_3_3()
 {
    if (jj_3R_literalValue_302_5_22()) return true;
    return false;
  }

  private boolean jj_3_2()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_value_258_4_30()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_2()) {
    jj_scanpos = xsp;
    if (jj_3_3()) {
    jj_scanpos = xsp;
    if (jj_3_4()) {
    jj_scanpos = xsp;
    if (jj_3_5()) {
    jj_scanpos = xsp;
    if (jj_3_6()) {
    jj_scanpos = xsp;
    if (jj_3_7()) {
    jj_scanpos = xsp;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3R_value_265_6_44()) {
    jj_scanpos = xsp;
    if (jj_3_9()) {
    jj_scanpos = xsp;
    if (jj_3R_value_267_6_45()) {
    jj_scanpos = xsp;
    if (jj_3R_value_268_6_46()) {
    jj_scanpos = xsp;
    if (jj_3_10()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_23()
 {
    if (jj_3R_value_258_4_30()) return true;
    return false;
  }

  private boolean jj_3_22()
 {
    if (jj_3R_ifValue_358_5_25()) return true;
    return false;
  }

  private boolean jj_3_21()
 {
    if (jj_3R_funcCall_367_5_27()) return true;
    return false;
  }

  private boolean jj_3_20()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_lambda_381_47_42()
 {
    if (jj_scan_token(LPAREN)) return true;
    if (jj_scan_token(RPAREN)) return true;
    return false;
  }

  private boolean jj_3R_assign_226_4_21()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(45)) {
    jj_scanpos = xsp;
    if (jj_scan_token(67)) {
    jj_scanpos = xsp;
    if (jj_scan_token(68)) {
    jj_scanpos = xsp;
    if (jj_scan_token(69)) {
    jj_scanpos = xsp;
    if (jj_scan_token(70)) {
    jj_scanpos = xsp;
    if (jj_scan_token(71)) {
    jj_scanpos = xsp;
    if (jj_scan_token(72)) {
    jj_scanpos = xsp;
    if (jj_scan_token(73)) {
    jj_scanpos = xsp;
    if (jj_scan_token(74)) {
    jj_scanpos = xsp;
    if (jj_scan_token(75)) {
    jj_scanpos = xsp;
    if (jj_scan_token(76)) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_lambda_381_21_50()
 {
    if (jj_scan_token(COMMA)) return true;
    return false;
  }

  private boolean jj_3_19()
 {
    if (jj_3R_funcCall_367_5_27()) return true;
    return false;
  }

  private boolean jj_3_18()
 {
    if (jj_3R_assign_226_4_21()) return true;
    return false;
  }

  private boolean jj_3_1()
 {
    if (jj_3R_assign_226_4_21()) return true;
    return false;
  }

  private boolean jj_3_17()
 {
    if (jj_3R_value_258_4_30()) return true;
    return false;
  }

  private boolean jj_3R_lambda_381_7_41()
 {
    if (jj_scan_token(IDENTIFIER)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_lambda_381_21_50()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_lambda_381_5_28()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_lambda_381_7_41()) {
    jj_scanpos = xsp;
    if (jj_3R_lambda_381_47_42()) return true;
    }
    if (jj_scan_token(ARROW)) return true;
    return false;
  }

  private boolean jj_3R_priorityArithmeticValue_350_36_49()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(59)) {
    jj_scanpos = xsp;
    if (jj_scan_token(60)) {
    jj_scanpos = xsp;
    if (jj_scan_token(64)) {
    jj_scanpos = xsp;
    if (jj_scan_token(61)) {
    jj_scanpos = xsp;
    if (jj_scan_token(62)) {
    jj_scanpos = xsp;
    if (jj_scan_token(63)) {
    jj_scanpos = xsp;
    if (jj_scan_token(65)) {
    jj_scanpos = xsp;
    if (jj_scan_token(66)) return true;
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  /** Generated Token Manager. */
  public BeadParserTokenManager token_source;
  JavaCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[58];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
	   jj_la1_init_0();
	   jj_la1_init_1();
	   jj_la1_init_2();
	}
	private static void jj_la1_init_0() {
	   jj_la1_0 = new int[] {0x80000,0x80000,0x0,0x0,0x800000,0x0,0x0,0x0,0x0,0x0,0x11a6500,0x100000,0x0,0x0,0x44141000,0x0,0x0,0x0,0x4000000,0x0,0x44041000,0x400000,0x400000,0x200000,0x200000,0x44141000,0x0,0x100000,0x44141000,0x0,0x0,0x0,0x0,0x44141000,0x44041000,0x0,0x0,0x44141000,0x0,0x0,0x11a6500,0x0,0x44141000,0x0,0x0,0x0,0x80000,0x1126500,0x11a6500,0x100000,0x11a6500,0x11a6500,0x4000,0x800,0x0,0x11a6500,0x100000,0x4000000,};
	}
	private static void jj_la1_init_1() {
	   jj_la1_1 = new int[] {0x2,0x0,0x2,0x1000,0x0,0x2000,0x2000,0x2000,0x400,0x2,0x42,0x0,0x140,0x400,0x153,0x400,0x2,0x1100,0x3,0x1100,0x1,0x800000,0x800000,0x1000000,0x1000000,0x53,0x78c000,0x2,0x3,0x6000000,0x6000000,0xf8000000,0xf8000000,0x13,0x3,0x2,0x400,0x153,0x400,0x2,0x42,0x400,0x153,0x400,0x12,0x40,0x0,0x40,0x42,0x2,0x42,0x42,0x40,0x0,0x400,0x42,0x0,0x0,};
	}
	private static void jj_la1_init_2() {
	   jj_la1_2 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x1ff8,0x1ff8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7,0x7,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,};
	}
  final private JJCalls[] jj_2_rtns = new JJCalls[23];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public BeadParser(java.io.InputStream stream) {
	  this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public BeadParser(java.io.InputStream stream, String encoding) {
	 try { jj_input_stream = new JavaCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
	 token_source = new BeadParserTokenManager(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 58; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
	  ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
	 try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
	 token_source.ReInit(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 58; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public BeadParser(java.io.Reader stream) {
	 jj_input_stream = new JavaCharStream(stream, 1, 1);
	 token_source = new BeadParserTokenManager(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 58; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
	if (jj_input_stream == null) {
	   jj_input_stream = new JavaCharStream(stream, 1, 1);
	} else {
	   jj_input_stream.ReInit(stream, 1, 1);
	}
	if (token_source == null) {
 token_source = new BeadParserTokenManager(jj_input_stream);
	}

	 token_source.ReInit(jj_input_stream);
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 58; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public BeadParser(BeadParserTokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 58; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(BeadParserTokenManager tm) {
	 token_source = tm;
	 token = new Token();
	 jj_ntk = -1;
	 jj_gen = 0;
	 for (int i = 0; i < 58; i++) jj_la1[i] = -1;
	 for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
	 Token oldToken;
	 if ((oldToken = token).next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 if (token.kind == kind) {
	   jj_gen++;
	   if (++jj_gc > 100) {
		 jj_gc = 0;
		 for (int i = 0; i < jj_2_rtns.length; i++) {
		   JJCalls c = jj_2_rtns[i];
		   while (c != null) {
			 if (c.gen < jj_gen) c.first = null;
			 c = c.next;
		   }
		 }
	   }
	   return token;
	 }
	 token = oldToken;
	 jj_kind = kind;
	 throw generateParseException();
  }

  @SuppressWarnings("serial")
  static private final class LookaheadSuccess extends java.lang.Error {
    @Override
    public Throwable fillInStackTrace() {
      return this;
    }
  }
  static private final LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
	 if (jj_scanpos == jj_lastpos) {
	   jj_la--;
	   if (jj_scanpos.next == null) {
		 jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
	   } else {
		 jj_lastpos = jj_scanpos = jj_scanpos.next;
	   }
	 } else {
	   jj_scanpos = jj_scanpos.next;
	 }
	 if (jj_rescan) {
	   int i = 0; Token tok = token;
	   while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
	   if (tok != null) jj_add_error_token(kind, i);
	 }
	 if (jj_scanpos.kind != kind) return true;
	 if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
	 return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
	 if (token.next != null) token = token.next;
	 else token = token.next = token_source.getNextToken();
	 jj_ntk = -1;
	 jj_gen++;
	 return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
	 Token t = token;
	 for (int i = 0; i < index; i++) {
	   if (t.next != null) t = t.next;
	   else t = t.next = token_source.getNextToken();
	 }
	 return t;
  }

  private int jj_ntk_f() {
	 if ((jj_nt=token.next) == null)
	   return (jj_ntk = (token.next=token_source.getNextToken()).kind);
	 else
	   return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
	 if (pos >= 100) {
		return;
	 }

	 if (pos == jj_endpos + 1) {
	   jj_lasttokens[jj_endpos++] = kind;
	 } else if (jj_endpos != 0) {
	   jj_expentry = new int[jj_endpos];

	   for (int i = 0; i < jj_endpos; i++) {
		 jj_expentry[i] = jj_lasttokens[i];
	   }

	   for (int[] oldentry : jj_expentries) {
		 if (oldentry.length == jj_expentry.length) {
		   boolean isMatched = true;

		   for (int i = 0; i < jj_expentry.length; i++) {
			 if (oldentry[i] != jj_expentry[i]) {
			   isMatched = false;
			   break;
			 }

		   }
		   if (isMatched) {
			 jj_expentries.add(jj_expentry);
			 break;
		   }
		 }
	   }

	   if (pos != 0) {
		 jj_lasttokens[(jj_endpos = pos) - 1] = kind;
	   }
	 }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
	 jj_expentries.clear();
	 boolean[] la1tokens = new boolean[78];
	 if (jj_kind >= 0) {
	   la1tokens[jj_kind] = true;
	   jj_kind = -1;
	 }
	 for (int i = 0; i < 58; i++) {
	   if (jj_la1[i] == jj_gen) {
		 for (int j = 0; j < 32; j++) {
		   if ((jj_la1_0[i] & (1<<j)) != 0) {
			 la1tokens[j] = true;
		   }
		   if ((jj_la1_1[i] & (1<<j)) != 0) {
			 la1tokens[32+j] = true;
		   }
		   if ((jj_la1_2[i] & (1<<j)) != 0) {
			 la1tokens[64+j] = true;
		   }
		 }
	   }
	 }
	 for (int i = 0; i < 78; i++) {
	   if (la1tokens[i]) {
		 jj_expentry = new int[1];
		 jj_expentry[0] = i;
		 jj_expentries.add(jj_expentry);
	   }
	 }
	 jj_endpos = 0;
	 jj_rescan_token();
	 jj_add_error_token(0, 0);
	 int[][] exptokseq = new int[jj_expentries.size()][];
	 for (int i = 0; i < jj_expentries.size(); i++) {
	   exptokseq[i] = jj_expentries.get(i);
	 }
	 return new ParseException(token, exptokseq, tokenImage);
  }

  private boolean trace_enabled;

/** Trace enabled. */
  final public boolean trace_enabled() {
	 return trace_enabled;
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
	 jj_rescan = true;
	 for (int i = 0; i < 23; i++) {
	   try {
		 JJCalls p = jj_2_rtns[i];

		 do {
		   if (p.gen > jj_gen) {
			 jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
			 switch (i) {
			   case 0: jj_3_1(); break;
			   case 1: jj_3_2(); break;
			   case 2: jj_3_3(); break;
			   case 3: jj_3_4(); break;
			   case 4: jj_3_5(); break;
			   case 5: jj_3_6(); break;
			   case 6: jj_3_7(); break;
			   case 7: jj_3_8(); break;
			   case 8: jj_3_9(); break;
			   case 9: jj_3_10(); break;
			   case 10: jj_3_11(); break;
			   case 11: jj_3_12(); break;
			   case 12: jj_3_13(); break;
			   case 13: jj_3_14(); break;
			   case 14: jj_3_15(); break;
			   case 15: jj_3_16(); break;
			   case 16: jj_3_17(); break;
			   case 17: jj_3_18(); break;
			   case 18: jj_3_19(); break;
			   case 19: jj_3_20(); break;
			   case 20: jj_3_21(); break;
			   case 21: jj_3_22(); break;
			   case 22: jj_3_23(); break;
			 }
		   }
		   p = p.next;
		 } while (p != null);

		 } catch(LookaheadSuccess ls) { }
	 }
	 jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
	 JJCalls p = jj_2_rtns[index];
	 while (p.gen > jj_gen) {
	   if (p.next == null) { p = p.next = new JJCalls(); break; }
	   p = p.next;
	 }

	 p.gen = jj_gen + xla - jj_la; 
	 p.first = token;
	 p.arg = xla;
  }

  static final class JJCalls {
	 int gen;
	 Token first;
	 int arg;
	 JJCalls next;
  }

}
